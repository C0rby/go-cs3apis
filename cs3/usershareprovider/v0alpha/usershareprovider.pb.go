// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs3/usershareprovider/v0alpha/usershareprovider.proto

package usershareproviderv0alphapb

import (
	context "context"
	fmt "fmt"
	rpc "github.com/cernbox/go-cs3apis/cs3/rpc"
	v0alpha "github.com/cernbox/go-cs3apis/cs3/storageprovider/v0alpha"
	types "github.com/cernbox/go-cs3apis/cs3/types"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListSharesRequest_Filter_Type int32

const (
	ListSharesRequest_Filter_TYPE_INVALID     ListSharesRequest_Filter_Type = 0
	ListSharesRequest_Filter_TYPE_RESOURCE_ID ListSharesRequest_Filter_Type = 1
	ListSharesRequest_Filter_TYPE_OWNER       ListSharesRequest_Filter_Type = 2
	ListSharesRequest_Filter_TYPE_CREATOR     ListSharesRequest_Filter_Type = 3
)

var ListSharesRequest_Filter_Type_name = map[int32]string{
	0: "TYPE_INVALID",
	1: "TYPE_RESOURCE_ID",
	2: "TYPE_OWNER",
	3: "TYPE_CREATOR",
}

var ListSharesRequest_Filter_Type_value = map[string]int32{
	"TYPE_INVALID":     0,
	"TYPE_RESOURCE_ID": 1,
	"TYPE_OWNER":       2,
	"TYPE_CREATOR":     3,
}

func (x ListSharesRequest_Filter_Type) String() string {
	return proto.EnumName(ListSharesRequest_Filter_Type_name, int32(x))
}

func (ListSharesRequest_Filter_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{4, 0, 0}
}

type CreateShareRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The unique identifier for the shared storage resource.
	ResourceId *v0alpha.ResourceId `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// REQUIRED.
	// The share grant for the share.
	Grant                *ShareGrant `protobuf:"bytes,3,opt,name=grant,proto3" json:"grant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateShareRequest) Reset()         { *m = CreateShareRequest{} }
func (m *CreateShareRequest) String() string { return proto.CompactTextString(m) }
func (*CreateShareRequest) ProtoMessage()    {}
func (*CreateShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{0}
}

func (m *CreateShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateShareRequest.Unmarshal(m, b)
}
func (m *CreateShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateShareRequest.Marshal(b, m, deterministic)
}
func (m *CreateShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateShareRequest.Merge(m, src)
}
func (m *CreateShareRequest) XXX_Size() int {
	return xxx_messageInfo_CreateShareRequest.Size(m)
}
func (m *CreateShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateShareRequest proto.InternalMessageInfo

func (m *CreateShareRequest) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *CreateShareRequest) GetResourceId() *v0alpha.ResourceId {
	if m != nil {
		return m.ResourceId
	}
	return nil
}

func (m *CreateShareRequest) GetGrant() *ShareGrant {
	if m != nil {
		return m.Grant
	}
	return nil
}

type CreateShareResponse struct {
	// REQUIRED.
	// The response status.
	Status *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The created share.
	Share                *Share   `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateShareResponse) Reset()         { *m = CreateShareResponse{} }
func (m *CreateShareResponse) String() string { return proto.CompactTextString(m) }
func (*CreateShareResponse) ProtoMessage()    {}
func (*CreateShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{1}
}

func (m *CreateShareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateShareResponse.Unmarshal(m, b)
}
func (m *CreateShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateShareResponse.Marshal(b, m, deterministic)
}
func (m *CreateShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateShareResponse.Merge(m, src)
}
func (m *CreateShareResponse) XXX_Size() int {
	return xxx_messageInfo_CreateShareResponse.Size(m)
}
func (m *CreateShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateShareResponse proto.InternalMessageInfo

func (m *CreateShareResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CreateShareResponse) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *CreateShareResponse) GetShare() *Share {
	if m != nil {
		return m.Share
	}
	return nil
}

type UpdateShareRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque               *types.Opaque                   `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	Ref                  *ShareReference                 `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Field                *UpdateShareRequest_UpdateField `protobuf:"bytes,3,opt,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *UpdateShareRequest) Reset()         { *m = UpdateShareRequest{} }
func (m *UpdateShareRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateShareRequest) ProtoMessage()    {}
func (*UpdateShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{2}
}

func (m *UpdateShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateShareRequest.Unmarshal(m, b)
}
func (m *UpdateShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateShareRequest.Marshal(b, m, deterministic)
}
func (m *UpdateShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateShareRequest.Merge(m, src)
}
func (m *UpdateShareRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateShareRequest.Size(m)
}
func (m *UpdateShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateShareRequest proto.InternalMessageInfo

func (m *UpdateShareRequest) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *UpdateShareRequest) GetRef() *ShareReference {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *UpdateShareRequest) GetField() *UpdateShareRequest_UpdateField {
	if m != nil {
		return m.Field
	}
	return nil
}

type UpdateShareRequest_UpdateField struct {
	// One of the update fields MUST be specified.
	//
	// Types that are valid to be assigned to Field:
	//	*UpdateShareRequest_UpdateField_Permissions
	//	*UpdateShareRequest_UpdateField_DisplayName
	Field                isUpdateShareRequest_UpdateField_Field `protobuf_oneof:"field"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *UpdateShareRequest_UpdateField) Reset()         { *m = UpdateShareRequest_UpdateField{} }
func (m *UpdateShareRequest_UpdateField) String() string { return proto.CompactTextString(m) }
func (*UpdateShareRequest_UpdateField) ProtoMessage()    {}
func (*UpdateShareRequest_UpdateField) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{2, 0}
}

func (m *UpdateShareRequest_UpdateField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateShareRequest_UpdateField.Unmarshal(m, b)
}
func (m *UpdateShareRequest_UpdateField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateShareRequest_UpdateField.Marshal(b, m, deterministic)
}
func (m *UpdateShareRequest_UpdateField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateShareRequest_UpdateField.Merge(m, src)
}
func (m *UpdateShareRequest_UpdateField) XXX_Size() int {
	return xxx_messageInfo_UpdateShareRequest_UpdateField.Size(m)
}
func (m *UpdateShareRequest_UpdateField) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateShareRequest_UpdateField.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateShareRequest_UpdateField proto.InternalMessageInfo

type isUpdateShareRequest_UpdateField_Field interface {
	isUpdateShareRequest_UpdateField_Field()
}

type UpdateShareRequest_UpdateField_Permissions struct {
	Permissions *SharePermissions `protobuf:"bytes,2,opt,name=permissions,proto3,oneof"`
}

type UpdateShareRequest_UpdateField_DisplayName struct {
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3,oneof"`
}

func (*UpdateShareRequest_UpdateField_Permissions) isUpdateShareRequest_UpdateField_Field() {}

func (*UpdateShareRequest_UpdateField_DisplayName) isUpdateShareRequest_UpdateField_Field() {}

func (m *UpdateShareRequest_UpdateField) GetField() isUpdateShareRequest_UpdateField_Field {
	if m != nil {
		return m.Field
	}
	return nil
}

func (m *UpdateShareRequest_UpdateField) GetPermissions() *SharePermissions {
	if x, ok := m.GetField().(*UpdateShareRequest_UpdateField_Permissions); ok {
		return x.Permissions
	}
	return nil
}

func (m *UpdateShareRequest_UpdateField) GetDisplayName() string {
	if x, ok := m.GetField().(*UpdateShareRequest_UpdateField_DisplayName); ok {
		return x.DisplayName
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*UpdateShareRequest_UpdateField) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*UpdateShareRequest_UpdateField_Permissions)(nil),
		(*UpdateShareRequest_UpdateField_DisplayName)(nil),
	}
}

type UpdateShareResponse struct {
	// REQUIRED.
	// The response status.
	Status *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *types.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UpdateShareResponse) Reset()         { *m = UpdateShareResponse{} }
func (m *UpdateShareResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateShareResponse) ProtoMessage()    {}
func (*UpdateShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{3}
}

func (m *UpdateShareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateShareResponse.Unmarshal(m, b)
}
func (m *UpdateShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateShareResponse.Marshal(b, m, deterministic)
}
func (m *UpdateShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateShareResponse.Merge(m, src)
}
func (m *UpdateShareResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateShareResponse.Size(m)
}
func (m *UpdateShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateShareResponse proto.InternalMessageInfo

func (m *UpdateShareResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UpdateShareResponse) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type ListSharesRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// OPTIONAL.
	// The list of filters to apply if any.
	Filters              []*ListSharesRequest_Filter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ListSharesRequest) Reset()         { *m = ListSharesRequest{} }
func (m *ListSharesRequest) String() string { return proto.CompactTextString(m) }
func (*ListSharesRequest) ProtoMessage()    {}
func (*ListSharesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{4}
}

func (m *ListSharesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSharesRequest.Unmarshal(m, b)
}
func (m *ListSharesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSharesRequest.Marshal(b, m, deterministic)
}
func (m *ListSharesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSharesRequest.Merge(m, src)
}
func (m *ListSharesRequest) XXX_Size() int {
	return xxx_messageInfo_ListSharesRequest.Size(m)
}
func (m *ListSharesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSharesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSharesRequest proto.InternalMessageInfo

func (m *ListSharesRequest) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *ListSharesRequest) GetFilters() []*ListSharesRequest_Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

// represents a filter to apply to the request.
type ListSharesRequest_Filter struct {
	Type ListSharesRequest_Filter_Type `protobuf:"varint,2,opt,name=type,proto3,enum=cs3.usershareproviderv0alpha.ListSharesRequest_Filter_Type" json:"type,omitempty"`
	// Types that are valid to be assigned to Term:
	//	*ListSharesRequest_Filter_ResourceId
	//	*ListSharesRequest_Filter_Owner
	//	*ListSharesRequest_Filter_Creator
	Term                 isListSharesRequest_Filter_Term `protobuf_oneof:"Term"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ListSharesRequest_Filter) Reset()         { *m = ListSharesRequest_Filter{} }
func (m *ListSharesRequest_Filter) String() string { return proto.CompactTextString(m) }
func (*ListSharesRequest_Filter) ProtoMessage()    {}
func (*ListSharesRequest_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{4, 0}
}

func (m *ListSharesRequest_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSharesRequest_Filter.Unmarshal(m, b)
}
func (m *ListSharesRequest_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSharesRequest_Filter.Marshal(b, m, deterministic)
}
func (m *ListSharesRequest_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSharesRequest_Filter.Merge(m, src)
}
func (m *ListSharesRequest_Filter) XXX_Size() int {
	return xxx_messageInfo_ListSharesRequest_Filter.Size(m)
}
func (m *ListSharesRequest_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSharesRequest_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListSharesRequest_Filter proto.InternalMessageInfo

func (m *ListSharesRequest_Filter) GetType() ListSharesRequest_Filter_Type {
	if m != nil {
		return m.Type
	}
	return ListSharesRequest_Filter_TYPE_INVALID
}

type isListSharesRequest_Filter_Term interface {
	isListSharesRequest_Filter_Term()
}

type ListSharesRequest_Filter_ResourceId struct {
	ResourceId *v0alpha.ResourceId `protobuf:"bytes,3,opt,name=resource_id,json=resourceId,proto3,oneof"`
}

type ListSharesRequest_Filter_Owner struct {
	Owner *types.UserId `protobuf:"bytes,4,opt,name=owner,proto3,oneof"`
}

type ListSharesRequest_Filter_Creator struct {
	Creator *types.UserId `protobuf:"bytes,5,opt,name=creator,proto3,oneof"`
}

func (*ListSharesRequest_Filter_ResourceId) isListSharesRequest_Filter_Term() {}

func (*ListSharesRequest_Filter_Owner) isListSharesRequest_Filter_Term() {}

func (*ListSharesRequest_Filter_Creator) isListSharesRequest_Filter_Term() {}

func (m *ListSharesRequest_Filter) GetTerm() isListSharesRequest_Filter_Term {
	if m != nil {
		return m.Term
	}
	return nil
}

func (m *ListSharesRequest_Filter) GetResourceId() *v0alpha.ResourceId {
	if x, ok := m.GetTerm().(*ListSharesRequest_Filter_ResourceId); ok {
		return x.ResourceId
	}
	return nil
}

func (m *ListSharesRequest_Filter) GetOwner() *types.UserId {
	if x, ok := m.GetTerm().(*ListSharesRequest_Filter_Owner); ok {
		return x.Owner
	}
	return nil
}

func (m *ListSharesRequest_Filter) GetCreator() *types.UserId {
	if x, ok := m.GetTerm().(*ListSharesRequest_Filter_Creator); ok {
		return x.Creator
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListSharesRequest_Filter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListSharesRequest_Filter_ResourceId)(nil),
		(*ListSharesRequest_Filter_Owner)(nil),
		(*ListSharesRequest_Filter_Creator)(nil),
	}
}

type ListSharesResponse struct {
	// REQUIRED.
	// The response status.
	Status *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The list of shares.
	Share                []*Share `protobuf:"bytes,3,rep,name=share,proto3" json:"share,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSharesResponse) Reset()         { *m = ListSharesResponse{} }
func (m *ListSharesResponse) String() string { return proto.CompactTextString(m) }
func (*ListSharesResponse) ProtoMessage()    {}
func (*ListSharesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{5}
}

func (m *ListSharesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSharesResponse.Unmarshal(m, b)
}
func (m *ListSharesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSharesResponse.Marshal(b, m, deterministic)
}
func (m *ListSharesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSharesResponse.Merge(m, src)
}
func (m *ListSharesResponse) XXX_Size() int {
	return xxx_messageInfo_ListSharesResponse.Size(m)
}
func (m *ListSharesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSharesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSharesResponse proto.InternalMessageInfo

func (m *ListSharesResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListSharesResponse) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *ListSharesResponse) GetShare() []*Share {
	if m != nil {
		return m.Share
	}
	return nil
}

type RemoveShareRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The reference to which the action should be performed.
	Ref                  *ShareReference `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RemoveShareRequest) Reset()         { *m = RemoveShareRequest{} }
func (m *RemoveShareRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveShareRequest) ProtoMessage()    {}
func (*RemoveShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{6}
}

func (m *RemoveShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveShareRequest.Unmarshal(m, b)
}
func (m *RemoveShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveShareRequest.Marshal(b, m, deterministic)
}
func (m *RemoveShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveShareRequest.Merge(m, src)
}
func (m *RemoveShareRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveShareRequest.Size(m)
}
func (m *RemoveShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveShareRequest proto.InternalMessageInfo

func (m *RemoveShareRequest) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *RemoveShareRequest) GetRef() *ShareReference {
	if m != nil {
		return m.Ref
	}
	return nil
}

type RemoveShareResponse struct {
	// REQUIRED.
	// The response status.
	Status *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *types.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RemoveShareResponse) Reset()         { *m = RemoveShareResponse{} }
func (m *RemoveShareResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveShareResponse) ProtoMessage()    {}
func (*RemoveShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{7}
}

func (m *RemoveShareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveShareResponse.Unmarshal(m, b)
}
func (m *RemoveShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveShareResponse.Marshal(b, m, deterministic)
}
func (m *RemoveShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveShareResponse.Merge(m, src)
}
func (m *RemoveShareResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveShareResponse.Size(m)
}
func (m *RemoveShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveShareResponse proto.InternalMessageInfo

func (m *RemoveShareResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RemoveShareResponse) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type GetShareRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The reference to which the action should be performed.
	Ref                  *ShareReference `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetShareRequest) Reset()         { *m = GetShareRequest{} }
func (m *GetShareRequest) String() string { return proto.CompactTextString(m) }
func (*GetShareRequest) ProtoMessage()    {}
func (*GetShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{8}
}

func (m *GetShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetShareRequest.Unmarshal(m, b)
}
func (m *GetShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetShareRequest.Marshal(b, m, deterministic)
}
func (m *GetShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetShareRequest.Merge(m, src)
}
func (m *GetShareRequest) XXX_Size() int {
	return xxx_messageInfo_GetShareRequest.Size(m)
}
func (m *GetShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetShareRequest proto.InternalMessageInfo

func (m *GetShareRequest) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *GetShareRequest) GetRef() *ShareReference {
	if m != nil {
		return m.Ref
	}
	return nil
}

type GetShareResponse struct {
	// REQUIRED.
	// The response status.
	Status *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The share.
	Share                *Share   `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetShareResponse) Reset()         { *m = GetShareResponse{} }
func (m *GetShareResponse) String() string { return proto.CompactTextString(m) }
func (*GetShareResponse) ProtoMessage()    {}
func (*GetShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{9}
}

func (m *GetShareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetShareResponse.Unmarshal(m, b)
}
func (m *GetShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetShareResponse.Marshal(b, m, deterministic)
}
func (m *GetShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetShareResponse.Merge(m, src)
}
func (m *GetShareResponse) XXX_Size() int {
	return xxx_messageInfo_GetShareResponse.Size(m)
}
func (m *GetShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetShareResponse proto.InternalMessageInfo

func (m *GetShareResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetShareResponse) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *GetShareResponse) GetShare() *Share {
	if m != nil {
		return m.Share
	}
	return nil
}

type ListReceivedSharesRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque               *types.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListReceivedSharesRequest) Reset()         { *m = ListReceivedSharesRequest{} }
func (m *ListReceivedSharesRequest) String() string { return proto.CompactTextString(m) }
func (*ListReceivedSharesRequest) ProtoMessage()    {}
func (*ListReceivedSharesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{10}
}

func (m *ListReceivedSharesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReceivedSharesRequest.Unmarshal(m, b)
}
func (m *ListReceivedSharesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReceivedSharesRequest.Marshal(b, m, deterministic)
}
func (m *ListReceivedSharesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReceivedSharesRequest.Merge(m, src)
}
func (m *ListReceivedSharesRequest) XXX_Size() int {
	return xxx_messageInfo_ListReceivedSharesRequest.Size(m)
}
func (m *ListReceivedSharesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReceivedSharesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListReceivedSharesRequest proto.InternalMessageInfo

func (m *ListReceivedSharesRequest) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type ListReceivedSharesResponse struct {
	// REQUIRED.
	// The response status.
	Status *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The list of received shares.
	Shares               []*ReceivedShare `protobuf:"bytes,3,rep,name=shares,proto3" json:"shares,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListReceivedSharesResponse) Reset()         { *m = ListReceivedSharesResponse{} }
func (m *ListReceivedSharesResponse) String() string { return proto.CompactTextString(m) }
func (*ListReceivedSharesResponse) ProtoMessage()    {}
func (*ListReceivedSharesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{11}
}

func (m *ListReceivedSharesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReceivedSharesResponse.Unmarshal(m, b)
}
func (m *ListReceivedSharesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReceivedSharesResponse.Marshal(b, m, deterministic)
}
func (m *ListReceivedSharesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReceivedSharesResponse.Merge(m, src)
}
func (m *ListReceivedSharesResponse) XXX_Size() int {
	return xxx_messageInfo_ListReceivedSharesResponse.Size(m)
}
func (m *ListReceivedSharesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReceivedSharesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListReceivedSharesResponse proto.InternalMessageInfo

func (m *ListReceivedSharesResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListReceivedSharesResponse) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *ListReceivedSharesResponse) GetShares() []*ReceivedShare {
	if m != nil {
		return m.Shares
	}
	return nil
}

type UpdateReceivedShareRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	Ref                  *ShareReference                         `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Field                *UpdateReceivedShareRequest_UpdateField `protobuf:"bytes,3,opt,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *UpdateReceivedShareRequest) Reset()         { *m = UpdateReceivedShareRequest{} }
func (m *UpdateReceivedShareRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateReceivedShareRequest) ProtoMessage()    {}
func (*UpdateReceivedShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{12}
}

func (m *UpdateReceivedShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReceivedShareRequest.Unmarshal(m, b)
}
func (m *UpdateReceivedShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReceivedShareRequest.Marshal(b, m, deterministic)
}
func (m *UpdateReceivedShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReceivedShareRequest.Merge(m, src)
}
func (m *UpdateReceivedShareRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateReceivedShareRequest.Size(m)
}
func (m *UpdateReceivedShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReceivedShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReceivedShareRequest proto.InternalMessageInfo

func (m *UpdateReceivedShareRequest) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *UpdateReceivedShareRequest) GetRef() *ShareReference {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *UpdateReceivedShareRequest) GetField() *UpdateReceivedShareRequest_UpdateField {
	if m != nil {
		return m.Field
	}
	return nil
}

type UpdateReceivedShareRequest_UpdateField struct {
	// One of the update fields MUST be specified.
	//
	// Types that are valid to be assigned to Field:
	//	*UpdateReceivedShareRequest_UpdateField_DisplayName
	//	*UpdateReceivedShareRequest_UpdateField_State
	//	*UpdateReceivedShareRequest_UpdateField_MountPath
	Field                isUpdateReceivedShareRequest_UpdateField_Field `protobuf_oneof:"field"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *UpdateReceivedShareRequest_UpdateField) Reset() {
	*m = UpdateReceivedShareRequest_UpdateField{}
}
func (m *UpdateReceivedShareRequest_UpdateField) String() string { return proto.CompactTextString(m) }
func (*UpdateReceivedShareRequest_UpdateField) ProtoMessage()    {}
func (*UpdateReceivedShareRequest_UpdateField) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{12, 0}
}

func (m *UpdateReceivedShareRequest_UpdateField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReceivedShareRequest_UpdateField.Unmarshal(m, b)
}
func (m *UpdateReceivedShareRequest_UpdateField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReceivedShareRequest_UpdateField.Marshal(b, m, deterministic)
}
func (m *UpdateReceivedShareRequest_UpdateField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReceivedShareRequest_UpdateField.Merge(m, src)
}
func (m *UpdateReceivedShareRequest_UpdateField) XXX_Size() int {
	return xxx_messageInfo_UpdateReceivedShareRequest_UpdateField.Size(m)
}
func (m *UpdateReceivedShareRequest_UpdateField) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReceivedShareRequest_UpdateField.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReceivedShareRequest_UpdateField proto.InternalMessageInfo

type isUpdateReceivedShareRequest_UpdateField_Field interface {
	isUpdateReceivedShareRequest_UpdateField_Field()
}

type UpdateReceivedShareRequest_UpdateField_DisplayName struct {
	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3,oneof"`
}

type UpdateReceivedShareRequest_UpdateField_State struct {
	State ShareState `protobuf:"varint,2,opt,name=state,proto3,enum=cs3.usershareproviderv0alpha.ShareState,oneof"`
}

type UpdateReceivedShareRequest_UpdateField_MountPath struct {
	MountPath string `protobuf:"bytes,3,opt,name=mount_path,json=mountPath,proto3,oneof"`
}

func (*UpdateReceivedShareRequest_UpdateField_DisplayName) isUpdateReceivedShareRequest_UpdateField_Field() {
}

func (*UpdateReceivedShareRequest_UpdateField_State) isUpdateReceivedShareRequest_UpdateField_Field() {
}

func (*UpdateReceivedShareRequest_UpdateField_MountPath) isUpdateReceivedShareRequest_UpdateField_Field() {
}

func (m *UpdateReceivedShareRequest_UpdateField) GetField() isUpdateReceivedShareRequest_UpdateField_Field {
	if m != nil {
		return m.Field
	}
	return nil
}

func (m *UpdateReceivedShareRequest_UpdateField) GetDisplayName() string {
	if x, ok := m.GetField().(*UpdateReceivedShareRequest_UpdateField_DisplayName); ok {
		return x.DisplayName
	}
	return ""
}

func (m *UpdateReceivedShareRequest_UpdateField) GetState() ShareState {
	if x, ok := m.GetField().(*UpdateReceivedShareRequest_UpdateField_State); ok {
		return x.State
	}
	return ShareState_USER_SHARE_STATE_INVALID
}

func (m *UpdateReceivedShareRequest_UpdateField) GetMountPath() string {
	if x, ok := m.GetField().(*UpdateReceivedShareRequest_UpdateField_MountPath); ok {
		return x.MountPath
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*UpdateReceivedShareRequest_UpdateField) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*UpdateReceivedShareRequest_UpdateField_DisplayName)(nil),
		(*UpdateReceivedShareRequest_UpdateField_State)(nil),
		(*UpdateReceivedShareRequest_UpdateField_MountPath)(nil),
	}
}

type UpdateReceivedShareResponse struct {
	// REQUIRED.
	// The response status.
	Status *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *types.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UpdateReceivedShareResponse) Reset()         { *m = UpdateReceivedShareResponse{} }
func (m *UpdateReceivedShareResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateReceivedShareResponse) ProtoMessage()    {}
func (*UpdateReceivedShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{13}
}

func (m *UpdateReceivedShareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReceivedShareResponse.Unmarshal(m, b)
}
func (m *UpdateReceivedShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReceivedShareResponse.Marshal(b, m, deterministic)
}
func (m *UpdateReceivedShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReceivedShareResponse.Merge(m, src)
}
func (m *UpdateReceivedShareResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateReceivedShareResponse.Size(m)
}
func (m *UpdateReceivedShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReceivedShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReceivedShareResponse proto.InternalMessageInfo

func (m *UpdateReceivedShareResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UpdateReceivedShareResponse) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type GetProviderRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque               *types.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetProviderRequest) Reset()         { *m = GetProviderRequest{} }
func (m *GetProviderRequest) String() string { return proto.CompactTextString(m) }
func (*GetProviderRequest) ProtoMessage()    {}
func (*GetProviderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{14}
}

func (m *GetProviderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProviderRequest.Unmarshal(m, b)
}
func (m *GetProviderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProviderRequest.Marshal(b, m, deterministic)
}
func (m *GetProviderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProviderRequest.Merge(m, src)
}
func (m *GetProviderRequest) XXX_Size() int {
	return xxx_messageInfo_GetProviderRequest.Size(m)
}
func (m *GetProviderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProviderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProviderRequest proto.InternalMessageInfo

func (m *GetProviderRequest) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type GetProviderResponse struct {
	// REQUIRED.
	// The response status.
	Status *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The information for the share provider.
	Info                 *ProviderInfo `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetProviderResponse) Reset()         { *m = GetProviderResponse{} }
func (m *GetProviderResponse) String() string { return proto.CompactTextString(m) }
func (*GetProviderResponse) ProtoMessage()    {}
func (*GetProviderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bb22cbe29f28efb, []int{15}
}

func (m *GetProviderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProviderResponse.Unmarshal(m, b)
}
func (m *GetProviderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProviderResponse.Marshal(b, m, deterministic)
}
func (m *GetProviderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProviderResponse.Merge(m, src)
}
func (m *GetProviderResponse) XXX_Size() int {
	return xxx_messageInfo_GetProviderResponse.Size(m)
}
func (m *GetProviderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProviderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProviderResponse proto.InternalMessageInfo

func (m *GetProviderResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetProviderResponse) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *GetProviderResponse) GetInfo() *ProviderInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterEnum("cs3.usershareproviderv0alpha.ListSharesRequest_Filter_Type", ListSharesRequest_Filter_Type_name, ListSharesRequest_Filter_Type_value)
	proto.RegisterType((*CreateShareRequest)(nil), "cs3.usershareproviderv0alpha.CreateShareRequest")
	proto.RegisterType((*CreateShareResponse)(nil), "cs3.usershareproviderv0alpha.CreateShareResponse")
	proto.RegisterType((*UpdateShareRequest)(nil), "cs3.usershareproviderv0alpha.UpdateShareRequest")
	proto.RegisterType((*UpdateShareRequest_UpdateField)(nil), "cs3.usershareproviderv0alpha.UpdateShareRequest.UpdateField")
	proto.RegisterType((*UpdateShareResponse)(nil), "cs3.usershareproviderv0alpha.UpdateShareResponse")
	proto.RegisterType((*ListSharesRequest)(nil), "cs3.usershareproviderv0alpha.ListSharesRequest")
	proto.RegisterType((*ListSharesRequest_Filter)(nil), "cs3.usershareproviderv0alpha.ListSharesRequest.Filter")
	proto.RegisterType((*ListSharesResponse)(nil), "cs3.usershareproviderv0alpha.ListSharesResponse")
	proto.RegisterType((*RemoveShareRequest)(nil), "cs3.usershareproviderv0alpha.RemoveShareRequest")
	proto.RegisterType((*RemoveShareResponse)(nil), "cs3.usershareproviderv0alpha.RemoveShareResponse")
	proto.RegisterType((*GetShareRequest)(nil), "cs3.usershareproviderv0alpha.GetShareRequest")
	proto.RegisterType((*GetShareResponse)(nil), "cs3.usershareproviderv0alpha.GetShareResponse")
	proto.RegisterType((*ListReceivedSharesRequest)(nil), "cs3.usershareproviderv0alpha.ListReceivedSharesRequest")
	proto.RegisterType((*ListReceivedSharesResponse)(nil), "cs3.usershareproviderv0alpha.ListReceivedSharesResponse")
	proto.RegisterType((*UpdateReceivedShareRequest)(nil), "cs3.usershareproviderv0alpha.UpdateReceivedShareRequest")
	proto.RegisterType((*UpdateReceivedShareRequest_UpdateField)(nil), "cs3.usershareproviderv0alpha.UpdateReceivedShareRequest.UpdateField")
	proto.RegisterType((*UpdateReceivedShareResponse)(nil), "cs3.usershareproviderv0alpha.UpdateReceivedShareResponse")
	proto.RegisterType((*GetProviderRequest)(nil), "cs3.usershareproviderv0alpha.GetProviderRequest")
	proto.RegisterType((*GetProviderResponse)(nil), "cs3.usershareproviderv0alpha.GetProviderResponse")
}

func init() {
	proto.RegisterFile("cs3/usershareprovider/v0alpha/usershareprovider.proto", fileDescriptor_8bb22cbe29f28efb)
}

var fileDescriptor_8bb22cbe29f28efb = []byte{
	// 1033 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0x5f, 0x6f, 0xdb, 0x54,
	0x14, 0xaf, 0xf3, 0xaf, 0xec, 0x64, 0xda, 0xb2, 0xdb, 0x0d, 0x05, 0x33, 0x89, 0xc9, 0x93, 0xa0,
	0x63, 0xd4, 0x2d, 0xad, 0x80, 0x4d, 0xa0, 0x42, 0x93, 0xa6, 0x6d, 0xa4, 0xa9, 0xb1, 0x6e, 0x9a,
	0x02, 0x13, 0x52, 0xe4, 0x39, 0x37, 0xab, 0xa5, 0xc6, 0x76, 0xef, 0x75, 0x82, 0x2a, 0x21, 0xf1,
	0x82, 0x84, 0xc4, 0x0b, 0xdf, 0x00, 0x89, 0x3f, 0x2f, 0xf0, 0xc0, 0x1b, 0xdf, 0x01, 0xf1, 0x09,
	0x78, 0xe1, 0x91, 0x27, 0xbe, 0x04, 0xba, 0xd7, 0x37, 0x4d, 0x1c, 0xbb, 0x76, 0x12, 0x94, 0x95,
	0x97, 0xaa, 0x3a, 0xe7, 0xfc, 0xce, 0xf9, 0x9d, 0x63, 0xdf, 0xfb, 0x3b, 0x0e, 0xbc, 0x63, 0xb1,
	0xad, 0xf5, 0x3e, 0x23, 0x94, 0x9d, 0x98, 0x94, 0x78, 0xd4, 0x1d, 0xd8, 0x1d, 0x42, 0xd7, 0x07,
	0x1b, 0xe6, 0xa9, 0x77, 0x62, 0x46, 0x3d, 0xba, 0x47, 0x5d, 0xdf, 0x45, 0x77, 0x2d, 0xb6, 0xa5,
	0x47, 0x9c, 0x12, 0xa5, 0xde, 0xe6, 0x49, 0xa9, 0x67, 0xad, 0x33, 0xdf, 0xf4, 0xfb, 0x2c, 0xc0,
	0xa8, 0x0f, 0xb9, 0x95, 0xf9, 0x2e, 0x35, 0x9f, 0x47, 0x0b, 0x51, 0xc2, 0xdc, 0x3e, 0xb5, 0xc8,
	0x30, 0xf8, 0x0e, 0x0f, 0xf6, 0xcf, 0x3d, 0xc2, 0x82, 0xbf, 0xd2, 0xbc, 0x96, 0x4c, 0x77, 0x22,
	0x8b, 0xf6, 0xbb, 0x02, 0xa8, 0x4a, 0x89, 0xe9, 0x93, 0x26, 0x8f, 0xc7, 0xe4, 0xac, 0x4f, 0x98,
	0x8f, 0x1e, 0x40, 0xc1, 0xf5, 0xcc, 0xb3, 0x3e, 0x29, 0x2b, 0xf7, 0x94, 0xd5, 0xe2, 0xe6, 0x2d,
	0x9d, 0xb7, 0x13, 0xd4, 0x69, 0x08, 0x07, 0x96, 0x01, 0x68, 0x1f, 0x8a, 0xc3, 0xa4, 0x6d, 0xbb,
	0x53, 0xce, 0x88, 0xf8, 0xd7, 0x45, 0xfc, 0x44, 0x2b, 0x92, 0x83, 0x8e, 0x65, 0x78, 0xbd, 0x83,
	0x81, 0x5e, 0xfc, 0x8f, 0xb6, 0x21, 0xff, 0x9c, 0x9a, 0x8e, 0x5f, 0xce, 0x8a, 0x14, 0xab, 0x7a,
	0xd2, 0x04, 0x75, 0x41, 0x77, 0x9f, 0xc7, 0xe3, 0x00, 0xa6, 0xfd, 0xa4, 0xc0, 0x4a, 0xa8, 0x15,
	0xe6, 0xb9, 0x0e, 0x23, 0xe8, 0x0d, 0x28, 0x04, 0x53, 0x96, 0xbd, 0xdc, 0x14, 0x89, 0xa9, 0x67,
	0xe9, 0x4d, 0x61, 0xc6, 0xd2, 0x3d, 0xd6, 0x74, 0x26, 0xad, 0xe9, 0xc7, 0x90, 0x17, 0xac, 0x24,
	0xd7, 0xfb, 0x53, 0x70, 0xc5, 0x01, 0x42, 0xfb, 0x3b, 0x03, 0xa8, 0xe5, 0x75, 0xfe, 0xc3, 0xc4,
	0xb7, 0x21, 0x4b, 0x49, 0x57, 0x92, 0x7c, 0x6b, 0x9a, 0xd2, 0xa4, 0x4b, 0x28, 0x71, 0x2c, 0x82,
	0x39, 0x10, 0x61, 0xc8, 0x77, 0x6d, 0x72, 0xda, 0x91, 0xe4, 0x3f, 0x48, 0xce, 0x10, 0xe5, 0x2a,
	0x4d, 0x7b, 0x3c, 0x07, 0x0e, 0x52, 0xa9, 0xdf, 0x2a, 0x50, 0x1c, 0x33, 0x23, 0x0c, 0x45, 0x8f,
	0xd0, 0x9e, 0xcd, 0x98, 0xed, 0x3a, 0x4c, 0x72, 0xd5, 0xa7, 0xe0, 0x6a, 0x8c, 0x50, 0x07, 0x4b,
	0x78, 0x3c, 0x09, 0xba, 0x0f, 0xd7, 0x3b, 0x36, 0xf3, 0x4e, 0xcd, 0xf3, 0xb6, 0x63, 0xf6, 0x82,
	0xd9, 0x5f, 0xe3, 0x41, 0xd2, 0x7a, 0x68, 0xf6, 0x48, 0x65, 0x59, 0x36, 0xa7, 0xd9, 0xb0, 0x12,
	0xa2, 0xbe, 0xb8, 0xb7, 0x41, 0xfb, 0x27, 0x0b, 0xb7, 0x9e, 0xd8, 0xcc, 0x17, 0x95, 0xd8, 0x1c,
	0x4f, 0xd4, 0x80, 0xe5, 0xae, 0x7d, 0xea, 0x13, 0xca, 0x27, 0x95, 0x5d, 0x2d, 0x6e, 0xbe, 0x9b,
	0x3c, 0xa9, 0x48, 0x31, 0x7d, 0x4f, 0xc0, 0xf1, 0x30, 0x8d, 0xfa, 0x67, 0x06, 0x0a, 0x81, 0x0d,
	0x35, 0x20, 0xc7, 0x8b, 0x8a, 0x36, 0x6e, 0x6c, 0xbe, 0x3f, 0x5f, 0x66, 0xfd, 0xe8, 0xdc, 0x23,
	0x58, 0x24, 0x42, 0xf5, 0xf0, 0x89, 0xcf, 0xce, 0x72, 0xe2, 0x0f, 0x96, 0x42, 0x67, 0xfe, 0x01,
	0xe4, 0xdd, 0xcf, 0x1d, 0x42, 0xcb, 0xb9, 0xc8, 0x88, 0x5a, 0x8c, 0x50, 0x11, 0x1f, 0x44, 0xa0,
	0x35, 0x58, 0xb6, 0xf8, 0xe9, 0x76, 0x69, 0x39, 0x7f, 0x79, 0xf0, 0x30, 0x46, 0x33, 0x20, 0xc7,
	0x29, 0xa3, 0x12, 0x5c, 0x3f, 0xfa, 0xd4, 0xa8, 0xb5, 0xeb, 0x87, 0xc7, 0x3b, 0x4f, 0xea, 0xbb,
	0xa5, 0x25, 0x74, 0x1b, 0x4a, 0xc2, 0x82, 0x6b, 0xcd, 0x46, 0x0b, 0x57, 0x6b, 0xed, 0xfa, 0x6e,
	0x49, 0x41, 0x37, 0x00, 0x84, 0xb5, 0xf1, 0xf1, 0x61, 0x0d, 0x97, 0x32, 0x17, 0xb8, 0x2a, 0xae,
	0xed, 0x1c, 0x35, 0x70, 0x29, 0x5b, 0x29, 0x40, 0xee, 0x88, 0xd0, 0x9e, 0xf6, 0xa3, 0x02, 0x68,
	0x7c, 0x4c, 0x2f, 0xe6, 0x9a, 0xc9, 0xce, 0x78, 0xcd, 0x7c, 0x09, 0x08, 0x93, 0x9e, 0x3b, 0xb8,
	0xaa, 0x5b, 0x86, 0x9f, 0xbf, 0x10, 0x81, 0x05, 0x9e, 0xbf, 0x2f, 0xe0, 0xe6, 0x3e, 0xf1, 0xaf,
	0xaa, 0xd1, 0xef, 0x15, 0x28, 0x8d, 0xca, 0xff, 0x3f, 0x45, 0x67, 0x0f, 0x5e, 0xe1, 0xaf, 0x2c,
	0x26, 0x16, 0xb1, 0x07, 0xa4, 0x33, 0xef, 0x45, 0xa5, 0xfd, 0xa6, 0x80, 0x1a, 0x97, 0x68, 0x81,
	0x5d, 0x57, 0xa1, 0x20, 0x7a, 0x60, 0xf2, 0x10, 0x3c, 0x4c, 0x6e, 0x3b, 0xc4, 0x0c, 0x4b, 0xa8,
	0xf6, 0x55, 0x16, 0xd4, 0x40, 0x0d, 0xc2, 0xfe, 0x17, 0x2f, 0xbe, 0x4f, 0xc3, 0xe2, 0xbb, 0x3b,
	0x8d, 0xf8, 0xc6, 0x71, 0x8e, 0x13, 0xe1, 0xef, 0x26, 0x44, 0x78, 0x52, 0x30, 0x95, 0x18, 0xc1,
	0x44, 0x1f, 0x41, 0x9e, 0x3f, 0x94, 0xa1, 0x3e, 0x4c, 0xb3, 0x76, 0xf1, 0x87, 0x49, 0xf8, 0xcd,
	0x2c, 0x80, 0xe8, 0x35, 0x80, 0x9e, 0xdb, 0x77, 0xfc, 0xb6, 0x67, 0xfa, 0x27, 0x17, 0xaa, 0x7c,
	0x4d, 0xd8, 0x0c, 0xd3, 0x3f, 0x19, 0x69, 0xf2, 0x19, 0xbc, 0x1a, 0xdb, 0xd1, 0x02, 0xef, 0x86,
	0x0f, 0x01, 0xed, 0x13, 0xdf, 0x90, 0x6d, 0xcc, 0xf1, 0xca, 0xff, 0xac, 0xc0, 0x4a, 0x28, 0xc3,
	0x02, 0xdf, 0xf5, 0x6d, 0xc8, 0xd9, 0x4e, 0xd7, 0x95, 0xef, 0xc6, 0x9b, 0xc9, 0x8f, 0x62, 0xc8,
	0xa8, 0xee, 0x74, 0x5d, 0x2c, 0x70, 0x9b, 0x7f, 0x2d, 0x43, 0x99, 0x4b, 0x61, 0xb0, 0x49, 0x49,
	0x7f, 0x93, 0xd0, 0x81, 0x6d, 0x11, 0x44, 0xa1, 0x38, 0xd6, 0x07, 0xda, 0x48, 0xce, 0x1e, 0x1d,
	0x9a, 0xfa, 0xf6, 0x0c, 0x08, 0x39, 0x24, 0x0a, 0xc5, 0xb1, 0x95, 0x3c, 0xad, 0x66, 0xf4, 0x43,
	0x24, 0xad, 0x66, 0xdc, 0xbe, 0x4f, 0xa1, 0x38, 0x26, 0x3c, 0x69, 0x35, 0xa3, 0x22, 0x99, 0x56,
	0x33, 0x4e, 0xd5, 0x6c, 0x78, 0x69, 0x28, 0x01, 0x68, 0x2d, 0x75, 0x4c, 0xa1, 0x6a, 0xfa, 0xb4,
	0xe1, 0xb2, 0x94, 0x0b, 0x30, 0xda, 0x3e, 0xd0, 0xfa, 0x8c, 0xeb, 0x9c, 0xba, 0x31, 0x3d, 0x60,
	0x34, 0xcf, 0xb1, 0x45, 0x3a, 0x6d, 0x9e, 0xd1, 0xcf, 0x85, 0xb4, 0x79, 0xc6, 0x6d, 0xe9, 0x5f,
	0xcb, 0x1d, 0x2b, 0xac, 0x33, 0xe8, 0xbd, 0x74, 0xf2, 0xb1, 0x12, 0xa7, 0x3e, 0x9a, 0x1d, 0x28,
	0x99, 0x7c, 0xa3, 0x0c, 0xbf, 0x23, 0x42, 0x01, 0xe8, 0xd1, 0xbc, 0x17, 0xb7, 0xfa, 0x78, 0x0e,
	0x64, 0x40, 0xa6, 0xf2, 0xab, 0x02, 0xf7, 0x2c, 0xb7, 0x97, 0x98, 0xa0, 0xf2, 0x72, 0x6b, 0xd2,
	0x63, 0xf0, 0x4f, 0x7d, 0x43, 0x79, 0xaa, 0x5e, 0x86, 0xf1, 0x9e, 0xfd, 0x90, 0xb9, 0x53, 0xad,
	0x34, 0x3e, 0x69, 0x35, 0x6b, 0xb8, 0x79, 0xb0, 0x83, 0x6b, 0x06, 0x6e, 0x1c, 0xd7, 0x77, 0x6b,
	0xf8, 0x97, 0xcc, 0xdd, 0x6a, 0x73, 0x4b, 0x8f, 0x5c, 0x2a, 0xc7, 0x1b, 0x3b, 0x1c, 0xf8, 0x87,
	0x70, 0x7f, 0x76, 0x99, 0xfb, 0x59, 0x41, 0xfc, 0xca, 0xb0, 0xf5, 0x6f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xf5, 0xc4, 0x8e, 0x8b, 0x45, 0x11, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserShareProviderServiceClient is the client API for UserShareProviderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserShareProviderServiceClient interface {
	// Returns the information for this provider.
	GetProvider(ctx context.Context, in *GetProviderRequest, opts ...grpc.CallOption) (*GetProviderResponse, error)
	// Creates a new share.
	// MUST return CODE_NOT_FOUND if the resource reference does not exist.
	// MUST return CODE_ALREADY_EXISTS if the share already exists for the 4-tuple consisting of
	// (owner, shared_resource, grantee).
	// New shares MUST be created in the state SHARE_STATE_PENDING.
	CreateShare(ctx context.Context, in *CreateShareRequest, opts ...grpc.CallOption) (*CreateShareResponse, error)
	// Removes a share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	RemoveShare(ctx context.Context, in *RemoveShareRequest, opts ...grpc.CallOption) (*RemoveShareResponse, error)
	// Gets share information for a single share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	GetShare(ctx context.Context, in *GetShareRequest, opts ...grpc.CallOption) (*GetShareResponse, error)
	// List the shares the authenticated principal has created,
	// both as owner and creator. If a filter is specified, only
	// shares satisfying the filter MUST be returned.
	ListShares(ctx context.Context, in *ListSharesRequest, opts ...grpc.CallOption) (*ListSharesResponse, error)
	// Updates a share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	UpdateShare(ctx context.Context, in *UpdateShareRequest, opts ...grpc.CallOption) (*UpdateShareResponse, error)
	// List all shares the authenticated principal has received.
	ListReceivedShares(ctx context.Context, in *ListReceivedSharesRequest, opts ...grpc.CallOption) (*ListReceivedSharesResponse, error)
	// Update the received share to change the share state or the display name.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	UpdateReceivedShare(ctx context.Context, in *UpdateReceivedShareRequest, opts ...grpc.CallOption) (*UpdateReceivedShareResponse, error)
}

type userShareProviderServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserShareProviderServiceClient(cc *grpc.ClientConn) UserShareProviderServiceClient {
	return &userShareProviderServiceClient{cc}
}

func (c *userShareProviderServiceClient) GetProvider(ctx context.Context, in *GetProviderRequest, opts ...grpc.CallOption) (*GetProviderResponse, error) {
	out := new(GetProviderResponse)
	err := c.cc.Invoke(ctx, "/cs3.usershareproviderv0alpha.UserShareProviderService/GetProvider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userShareProviderServiceClient) CreateShare(ctx context.Context, in *CreateShareRequest, opts ...grpc.CallOption) (*CreateShareResponse, error) {
	out := new(CreateShareResponse)
	err := c.cc.Invoke(ctx, "/cs3.usershareproviderv0alpha.UserShareProviderService/CreateShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userShareProviderServiceClient) RemoveShare(ctx context.Context, in *RemoveShareRequest, opts ...grpc.CallOption) (*RemoveShareResponse, error) {
	out := new(RemoveShareResponse)
	err := c.cc.Invoke(ctx, "/cs3.usershareproviderv0alpha.UserShareProviderService/RemoveShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userShareProviderServiceClient) GetShare(ctx context.Context, in *GetShareRequest, opts ...grpc.CallOption) (*GetShareResponse, error) {
	out := new(GetShareResponse)
	err := c.cc.Invoke(ctx, "/cs3.usershareproviderv0alpha.UserShareProviderService/GetShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userShareProviderServiceClient) ListShares(ctx context.Context, in *ListSharesRequest, opts ...grpc.CallOption) (*ListSharesResponse, error) {
	out := new(ListSharesResponse)
	err := c.cc.Invoke(ctx, "/cs3.usershareproviderv0alpha.UserShareProviderService/ListShares", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userShareProviderServiceClient) UpdateShare(ctx context.Context, in *UpdateShareRequest, opts ...grpc.CallOption) (*UpdateShareResponse, error) {
	out := new(UpdateShareResponse)
	err := c.cc.Invoke(ctx, "/cs3.usershareproviderv0alpha.UserShareProviderService/UpdateShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userShareProviderServiceClient) ListReceivedShares(ctx context.Context, in *ListReceivedSharesRequest, opts ...grpc.CallOption) (*ListReceivedSharesResponse, error) {
	out := new(ListReceivedSharesResponse)
	err := c.cc.Invoke(ctx, "/cs3.usershareproviderv0alpha.UserShareProviderService/ListReceivedShares", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userShareProviderServiceClient) UpdateReceivedShare(ctx context.Context, in *UpdateReceivedShareRequest, opts ...grpc.CallOption) (*UpdateReceivedShareResponse, error) {
	out := new(UpdateReceivedShareResponse)
	err := c.cc.Invoke(ctx, "/cs3.usershareproviderv0alpha.UserShareProviderService/UpdateReceivedShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserShareProviderServiceServer is the server API for UserShareProviderService service.
type UserShareProviderServiceServer interface {
	// Returns the information for this provider.
	GetProvider(context.Context, *GetProviderRequest) (*GetProviderResponse, error)
	// Creates a new share.
	// MUST return CODE_NOT_FOUND if the resource reference does not exist.
	// MUST return CODE_ALREADY_EXISTS if the share already exists for the 4-tuple consisting of
	// (owner, shared_resource, grantee).
	// New shares MUST be created in the state SHARE_STATE_PENDING.
	CreateShare(context.Context, *CreateShareRequest) (*CreateShareResponse, error)
	// Removes a share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	RemoveShare(context.Context, *RemoveShareRequest) (*RemoveShareResponse, error)
	// Gets share information for a single share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	GetShare(context.Context, *GetShareRequest) (*GetShareResponse, error)
	// List the shares the authenticated principal has created,
	// both as owner and creator. If a filter is specified, only
	// shares satisfying the filter MUST be returned.
	ListShares(context.Context, *ListSharesRequest) (*ListSharesResponse, error)
	// Updates a share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	UpdateShare(context.Context, *UpdateShareRequest) (*UpdateShareResponse, error)
	// List all shares the authenticated principal has received.
	ListReceivedShares(context.Context, *ListReceivedSharesRequest) (*ListReceivedSharesResponse, error)
	// Update the received share to change the share state or the display name.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	UpdateReceivedShare(context.Context, *UpdateReceivedShareRequest) (*UpdateReceivedShareResponse, error)
}

func RegisterUserShareProviderServiceServer(s *grpc.Server, srv UserShareProviderServiceServer) {
	s.RegisterService(&_UserShareProviderService_serviceDesc, srv)
}

func _UserShareProviderService_GetProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProviderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserShareProviderServiceServer).GetProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.usershareproviderv0alpha.UserShareProviderService/GetProvider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserShareProviderServiceServer).GetProvider(ctx, req.(*GetProviderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserShareProviderService_CreateShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserShareProviderServiceServer).CreateShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.usershareproviderv0alpha.UserShareProviderService/CreateShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserShareProviderServiceServer).CreateShare(ctx, req.(*CreateShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserShareProviderService_RemoveShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserShareProviderServiceServer).RemoveShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.usershareproviderv0alpha.UserShareProviderService/RemoveShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserShareProviderServiceServer).RemoveShare(ctx, req.(*RemoveShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserShareProviderService_GetShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserShareProviderServiceServer).GetShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.usershareproviderv0alpha.UserShareProviderService/GetShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserShareProviderServiceServer).GetShare(ctx, req.(*GetShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserShareProviderService_ListShares_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSharesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserShareProviderServiceServer).ListShares(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.usershareproviderv0alpha.UserShareProviderService/ListShares",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserShareProviderServiceServer).ListShares(ctx, req.(*ListSharesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserShareProviderService_UpdateShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserShareProviderServiceServer).UpdateShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.usershareproviderv0alpha.UserShareProviderService/UpdateShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserShareProviderServiceServer).UpdateShare(ctx, req.(*UpdateShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserShareProviderService_ListReceivedShares_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReceivedSharesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserShareProviderServiceServer).ListReceivedShares(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.usershareproviderv0alpha.UserShareProviderService/ListReceivedShares",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserShareProviderServiceServer).ListReceivedShares(ctx, req.(*ListReceivedSharesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserShareProviderService_UpdateReceivedShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReceivedShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserShareProviderServiceServer).UpdateReceivedShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.usershareproviderv0alpha.UserShareProviderService/UpdateReceivedShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserShareProviderServiceServer).UpdateReceivedShare(ctx, req.(*UpdateReceivedShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserShareProviderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cs3.usershareproviderv0alpha.UserShareProviderService",
	HandlerType: (*UserShareProviderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProvider",
			Handler:    _UserShareProviderService_GetProvider_Handler,
		},
		{
			MethodName: "CreateShare",
			Handler:    _UserShareProviderService_CreateShare_Handler,
		},
		{
			MethodName: "RemoveShare",
			Handler:    _UserShareProviderService_RemoveShare_Handler,
		},
		{
			MethodName: "GetShare",
			Handler:    _UserShareProviderService_GetShare_Handler,
		},
		{
			MethodName: "ListShares",
			Handler:    _UserShareProviderService_ListShares_Handler,
		},
		{
			MethodName: "UpdateShare",
			Handler:    _UserShareProviderService_UpdateShare_Handler,
		},
		{
			MethodName: "ListReceivedShares",
			Handler:    _UserShareProviderService_ListReceivedShares_Handler,
		},
		{
			MethodName: "UpdateReceivedShare",
			Handler:    _UserShareProviderService_UpdateReceivedShare_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cs3/usershareprovider/v0alpha/usershareprovider.proto",
}
