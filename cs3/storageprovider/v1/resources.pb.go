// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs3/storageprovider/v1/resources.proto

package storageproviderv1pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ACLType int32

const (
	ACLType_ACL_TYPE_INVALID ACLType = 0
	ACLType_ACL_TYPE_USER    ACLType = 1
	ACLType_ACL_TYPE_GROUP   ACLType = 2
)

var ACLType_name = map[int32]string{
	0: "ACL_TYPE_INVALID",
	1: "ACL_TYPE_USER",
	2: "ACL_TYPE_GROUP",
}

var ACLType_value = map[string]int32{
	"ACL_TYPE_INVALID": 0,
	"ACL_TYPE_USER":    1,
	"ACL_TYPE_GROUP":   2,
}

func (x ACLType) String() string {
	return proto.EnumName(ACLType_name, int32(x))
}

func (ACLType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_19ea3421c9aa12ae, []int{0}
}

type ACLMode int32

const (
	ACLMode_ACL_MODE_INVALID   ACLMode = 0
	ACLMode_ACL_MODE_READONLY  ACLMode = 1
	ACLMode_ACL_MODE_READWRITE ACLMode = 2
)

var ACLMode_name = map[int32]string{
	0: "ACL_MODE_INVALID",
	1: "ACL_MODE_READONLY",
	2: "ACL_MODE_READWRITE",
}

var ACLMode_value = map[string]int32{
	"ACL_MODE_INVALID":   0,
	"ACL_MODE_READONLY":  1,
	"ACL_MODE_READWRITE": 2,
}

func (x ACLMode) String() string {
	return proto.EnumName(ACLMode_name, int32(x))
}

func (ACLMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_19ea3421c9aa12ae, []int{1}
}

type ACL struct {
	Target               string   `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Type                 ACLType  `protobuf:"varint,2,opt,name=type,proto3,enum=cs3.storageproviderv1.ACLType" json:"type,omitempty"`
	Mode                 ACLMode  `protobuf:"varint,3,opt,name=mode,proto3,enum=cs3.storageproviderv1.ACLMode" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ACL) Reset()         { *m = ACL{} }
func (m *ACL) String() string { return proto.CompactTextString(m) }
func (*ACL) ProtoMessage()    {}
func (*ACL) Descriptor() ([]byte, []int) {
	return fileDescriptor_19ea3421c9aa12ae, []int{0}
}

func (m *ACL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ACL.Unmarshal(m, b)
}
func (m *ACL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ACL.Marshal(b, m, deterministic)
}
func (m *ACL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ACL.Merge(m, src)
}
func (m *ACL) XXX_Size() int {
	return xxx_messageInfo_ACL.Size(m)
}
func (m *ACL) XXX_DiscardUnknown() {
	xxx_messageInfo_ACL.DiscardUnknown(m)
}

var xxx_messageInfo_ACL proto.InternalMessageInfo

func (m *ACL) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *ACL) GetType() ACLType {
	if m != nil {
		return m.Type
	}
	return ACLType_ACL_TYPE_INVALID
}

func (m *ACL) GetMode() ACLMode {
	if m != nil {
		return m.Mode
	}
	return ACLMode_ACL_MODE_INVALID
}

type Metadata struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Filename             string       `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Size                 uint64       `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Mtime                uint64       `protobuf:"varint,4,opt,name=mtime,proto3" json:"mtime,omitempty"`
	IsDir                bool         `protobuf:"varint,5,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
	Etag                 string       `protobuf:"bytes,6,opt,name=etag,proto3" json:"etag,omitempty"`
	Checksum             string       `protobuf:"bytes,7,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Permissions          *Permissions `protobuf:"bytes,8,opt,name=permissions,proto3" json:"permissions,omitempty"`
	Mime                 string       `protobuf:"bytes,9,opt,name=mime,proto3" json:"mime,omitempty"`
	Sys                  []byte       `protobuf:"bytes,12,opt,name=sys,proto3" json:"sys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_19ea3421c9aa12ae, []int{1}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Metadata) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *Metadata) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Metadata) GetMtime() uint64 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func (m *Metadata) GetIsDir() bool {
	if m != nil {
		return m.IsDir
	}
	return false
}

func (m *Metadata) GetEtag() string {
	if m != nil {
		return m.Etag
	}
	return ""
}

func (m *Metadata) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

func (m *Metadata) GetPermissions() *Permissions {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *Metadata) GetMime() string {
	if m != nil {
		return m.Mime
	}
	return ""
}

func (m *Metadata) GetSys() []byte {
	if m != nil {
		return m.Sys
	}
	return nil
}

type Permissions struct {
	Read                 bool     `protobuf:"varint,1,opt,name=read,proto3" json:"read,omitempty"`
	Write                bool     `protobuf:"varint,2,opt,name=write,proto3" json:"write,omitempty"`
	Share                bool     `protobuf:"varint,3,opt,name=share,proto3" json:"share,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Permissions) Reset()         { *m = Permissions{} }
func (m *Permissions) String() string { return proto.CompactTextString(m) }
func (*Permissions) ProtoMessage()    {}
func (*Permissions) Descriptor() ([]byte, []int) {
	return fileDescriptor_19ea3421c9aa12ae, []int{2}
}

func (m *Permissions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Permissions.Unmarshal(m, b)
}
func (m *Permissions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Permissions.Marshal(b, m, deterministic)
}
func (m *Permissions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Permissions.Merge(m, src)
}
func (m *Permissions) XXX_Size() int {
	return xxx_messageInfo_Permissions.Size(m)
}
func (m *Permissions) XXX_DiscardUnknown() {
	xxx_messageInfo_Permissions.DiscardUnknown(m)
}

var xxx_messageInfo_Permissions proto.InternalMessageInfo

func (m *Permissions) GetRead() bool {
	if m != nil {
		return m.Read
	}
	return false
}

func (m *Permissions) GetWrite() bool {
	if m != nil {
		return m.Write
	}
	return false
}

func (m *Permissions) GetShare() bool {
	if m != nil {
		return m.Share
	}
	return false
}

type DataChunk struct {
	Length               uint64   `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
	Offset               uint64   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataChunk) Reset()         { *m = DataChunk{} }
func (m *DataChunk) String() string { return proto.CompactTextString(m) }
func (*DataChunk) ProtoMessage()    {}
func (*DataChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_19ea3421c9aa12ae, []int{3}
}

func (m *DataChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataChunk.Unmarshal(m, b)
}
func (m *DataChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataChunk.Marshal(b, m, deterministic)
}
func (m *DataChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataChunk.Merge(m, src)
}
func (m *DataChunk) XXX_Size() int {
	return xxx_messageInfo_DataChunk.Size(m)
}
func (m *DataChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_DataChunk.DiscardUnknown(m)
}

var xxx_messageInfo_DataChunk proto.InternalMessageInfo

func (m *DataChunk) GetLength() uint64 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *DataChunk) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DataChunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Version struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Size                 uint64   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Mtime                uint64   `protobuf:"varint,3,opt,name=mtime,proto3" json:"mtime,omitempty"`
	IsDir                bool     `protobuf:"varint,4,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_19ea3421c9aa12ae, []int{4}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Version) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Version) GetMtime() uint64 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func (m *Version) GetIsDir() bool {
	if m != nil {
		return m.IsDir
	}
	return false
}

type RecycleItem struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Filename             string   `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Size                 uint64   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Deltime              uint64   `protobuf:"varint,4,opt,name=deltime,proto3" json:"deltime,omitempty"`
	IsDir                bool     `protobuf:"varint,5,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecycleItem) Reset()         { *m = RecycleItem{} }
func (m *RecycleItem) String() string { return proto.CompactTextString(m) }
func (*RecycleItem) ProtoMessage()    {}
func (*RecycleItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_19ea3421c9aa12ae, []int{5}
}

func (m *RecycleItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecycleItem.Unmarshal(m, b)
}
func (m *RecycleItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecycleItem.Marshal(b, m, deterministic)
}
func (m *RecycleItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecycleItem.Merge(m, src)
}
func (m *RecycleItem) XXX_Size() int {
	return xxx_messageInfo_RecycleItem.Size(m)
}
func (m *RecycleItem) XXX_DiscardUnknown() {
	xxx_messageInfo_RecycleItem.DiscardUnknown(m)
}

var xxx_messageInfo_RecycleItem proto.InternalMessageInfo

func (m *RecycleItem) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RecycleItem) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *RecycleItem) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *RecycleItem) GetDeltime() uint64 {
	if m != nil {
		return m.Deltime
	}
	return 0
}

func (m *RecycleItem) GetIsDir() bool {
	if m != nil {
		return m.IsDir
	}
	return false
}

func init() {
	proto.RegisterEnum("cs3.storageproviderv1.ACLType", ACLType_name, ACLType_value)
	proto.RegisterEnum("cs3.storageproviderv1.ACLMode", ACLMode_name, ACLMode_value)
	proto.RegisterType((*ACL)(nil), "cs3.storageproviderv1.ACL")
	proto.RegisterType((*Metadata)(nil), "cs3.storageproviderv1.Metadata")
	proto.RegisterType((*Permissions)(nil), "cs3.storageproviderv1.Permissions")
	proto.RegisterType((*DataChunk)(nil), "cs3.storageproviderv1.DataChunk")
	proto.RegisterType((*Version)(nil), "cs3.storageproviderv1.Version")
	proto.RegisterType((*RecycleItem)(nil), "cs3.storageproviderv1.RecycleItem")
}

func init() {
	proto.RegisterFile("cs3/storageprovider/v1/resources.proto", fileDescriptor_19ea3421c9aa12ae)
}

var fileDescriptor_19ea3421c9aa12ae = []byte{
	// 594 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0xc5, 0x8e, 0x9b, 0x38, 0x37, 0x25, 0x72, 0x87, 0xa6, 0x32, 0x2c, 0x50, 0xe4, 0x05, 0x8a,
	0xba, 0x48, 0xd5, 0xe6, 0x0b, 0xf2, 0x02, 0x45, 0x4a, 0x1a, 0x6b, 0xfa, 0x80, 0xa2, 0x4a, 0x95,
	0x6b, 0xdf, 0x26, 0xa3, 0xc6, 0xb1, 0x35, 0x33, 0x2d, 0x0a, 0x6c, 0xd8, 0xf0, 0x05, 0xfc, 0x01,
	0x4b, 0x3e, 0x85, 0xaf, 0x42, 0x33, 0x76, 0x42, 0x4a, 0x53, 0x21, 0x76, 0xf7, 0x1c, 0xdd, 0x39,
	0xe7, 0x7a, 0xce, 0x1d, 0xc3, 0x9b, 0x50, 0xb4, 0x0e, 0x84, 0x4c, 0x78, 0x30, 0xc1, 0x94, 0x27,
	0xf7, 0x2c, 0x42, 0x7e, 0x70, 0x7f, 0x78, 0xc0, 0x51, 0x24, 0x77, 0x3c, 0x44, 0xd1, 0x4c, 0x79,
	0x22, 0x13, 0x52, 0x0b, 0x45, 0xab, 0xf9, 0x57, 0xdf, 0xfd, 0xa1, 0xf7, 0xcd, 0x80, 0x42, 0xbb,
	0x3b, 0x24, 0x7b, 0x50, 0x94, 0x01, 0x9f, 0xa0, 0x74, 0x8d, 0xba, 0xd1, 0x28, 0xd3, 0x1c, 0x91,
	0x23, 0xb0, 0xe4, 0x22, 0x45, 0xd7, 0xac, 0x1b, 0x8d, 0xea, 0xd1, 0xeb, 0xe6, 0x46, 0x95, 0x66,
	0xbb, 0x3b, 0x3c, 0x5d, 0xa4, 0x48, 0x75, 0xaf, 0x3a, 0x13, 0x27, 0x11, 0xba, 0x85, 0x7f, 0x9d,
	0x19, 0x25, 0x11, 0x52, 0xdd, 0xeb, 0x7d, 0x37, 0xc1, 0x1e, 0xa1, 0x0c, 0xa2, 0x40, 0x06, 0xa4,
	0x0a, 0x26, 0x8b, 0xf2, 0x41, 0x4c, 0x16, 0x91, 0x57, 0x60, 0xdf, 0xb0, 0x19, 0xce, 0x83, 0x38,
	0x1b, 0xa4, 0x4c, 0x57, 0x98, 0x10, 0xb0, 0x04, 0xfb, 0x9c, 0x99, 0x59, 0x54, 0xd7, 0x64, 0x17,
	0xb6, 0x62, 0xc9, 0x62, 0x74, 0x2d, 0x4d, 0x66, 0x80, 0xd4, 0xa0, 0xc8, 0xc4, 0x55, 0xc4, 0xb8,
	0xbb, 0x55, 0x37, 0x1a, 0x36, 0xdd, 0x62, 0xa2, 0xc7, 0xb8, 0x12, 0x40, 0x19, 0x4c, 0xdc, 0xa2,
	0x16, 0xd6, 0xb5, 0x32, 0x0c, 0xa7, 0x18, 0xde, 0x8a, 0xbb, 0xd8, 0x2d, 0x65, 0x86, 0x4b, 0x4c,
	0x7a, 0x50, 0x49, 0x91, 0xc7, 0x4c, 0x08, 0x96, 0xcc, 0x85, 0x6b, 0xd7, 0x8d, 0x46, 0xe5, 0xc8,
	0x7b, 0xe2, 0x23, 0xfd, 0x3f, 0x9d, 0x74, 0xfd, 0x98, 0x72, 0x8d, 0xd5, 0x84, 0xe5, 0xcc, 0x55,
	0xd5, 0xc4, 0x81, 0x82, 0x58, 0x08, 0x77, 0xbb, 0x6e, 0x34, 0xb6, 0xa9, 0x2a, 0xbd, 0x11, 0x54,
	0xfc, 0x87, 0x87, 0x38, 0x06, 0xd9, 0xcd, 0xd8, 0x54, 0xd7, 0xea, 0x5b, 0x3f, 0x71, 0x26, 0xb3,
	0x8b, 0xb1, 0x69, 0x06, 0x14, 0x2b, 0xa6, 0x01, 0xcf, 0xae, 0xc5, 0xa6, 0x19, 0xf0, 0xc6, 0x50,
	0xee, 0x05, 0x32, 0xe8, 0x4e, 0xef, 0xe6, 0xb7, 0x2a, 0xf1, 0x19, 0xce, 0x27, 0x72, 0xaa, 0xe5,
	0x2c, 0x9a, 0x23, 0xc5, 0x27, 0x37, 0x37, 0x02, 0xa5, 0x56, 0xb4, 0x68, 0x8e, 0x94, 0xb9, 0x0a,
	0x47, 0x2b, 0x6e, 0x53, 0x5d, 0x7b, 0x97, 0x50, 0x3a, 0x47, 0xae, 0x86, 0x53, 0xc3, 0xdf, 0xe2,
	0x22, 0x0f, 0x4d, 0x95, 0xab, 0x64, 0xcc, 0x4d, 0xc9, 0x14, 0x36, 0x27, 0x63, 0xad, 0x25, 0xe3,
	0x7d, 0x35, 0xa0, 0x42, 0x31, 0x5c, 0x84, 0x33, 0x1c, 0x48, 0x8c, 0x37, 0x58, 0xfc, 0xef, 0x62,
	0xb8, 0x50, 0x8a, 0x70, 0xb6, 0xb6, 0x1a, 0x4b, 0xf8, 0xc4, 0x72, 0xec, 0xbf, 0x85, 0x52, 0xbe,
	0xdb, 0x64, 0x17, 0x9c, 0x76, 0x77, 0x78, 0x75, 0x7a, 0xe1, 0xf7, 0xaf, 0x06, 0xc7, 0xe7, 0xed,
	0xe1, 0xa0, 0xe7, 0x3c, 0x23, 0x3b, 0xf0, 0x7c, 0xc5, 0x9e, 0x9d, 0xf4, 0xa9, 0x63, 0x10, 0x02,
	0xd5, 0x15, 0xf5, 0x8e, 0x8e, 0xcf, 0x7c, 0xc7, 0xdc, 0x3f, 0xd6, 0x3a, 0x6a, 0xdf, 0x97, 0x3a,
	0xa3, 0x71, 0x6f, 0x5d, 0xa7, 0x06, 0x3b, 0x2b, 0x96, 0xf6, 0xdb, 0xbd, 0xf1, 0xf1, 0xf0, 0xc2,
	0x31, 0xc8, 0x1e, 0x90, 0x07, 0xf4, 0x7b, 0x3a, 0x38, 0xed, 0x3b, 0x66, 0xe7, 0x0b, 0xbc, 0x0c,
	0x93, 0x78, 0xf3, 0xd2, 0x75, 0xaa, 0x74, 0xf9, 0xf6, 0x7d, 0xf5, 0xf4, 0x7d, 0xe3, 0xe3, 0x8b,
	0x47, 0x4d, 0xe9, 0xf5, 0x0f, 0xb3, 0xd8, 0xed, 0x8c, 0x3f, 0xb4, 0x3b, 0x3f, 0xcd, 0x5a, 0xf7,
	0xa4, 0xd5, 0x3c, 0xc9, 0x5a, 0xfc, 0xbc, 0xe5, 0xfc, 0xf0, 0x97, 0xe6, 0x2f, 0x1f, 0xf1, 0xd7,
	0x45, 0xfd, 0x47, 0x69, 0xfd, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x60, 0xe7, 0x29, 0x4b, 0x7b, 0x04,
	0x00, 0x00,
}
