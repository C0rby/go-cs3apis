// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs3/storagetypes/storagetypes.proto

// This package contains common types
// used for sharing.

package storagetypespb

import (
	fmt "fmt"
	types "github.com/cernbox/go-cs3apis/cs3/types"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProviderInfo struct {
	// OPTIONAL.
	// Opaque information (containing storage-specific information).
	// For example, additional metadata attached to the resource.
	Opaque *types.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The storage provider id that will become part of the
	// resource id.
	// For example, if the provider_id is "home", resources obtained
	// from this storage provider will have a resource id like "home:1234".
	ProviderId string `protobuf:"bytes,2,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	// REQUIRED.
	// The public path prefix this storage provider handles.
	// In Unix literature, the mount path.
	// For example, if the provider_path is "/home", resources obtained
	// from this storage provier will have a resource path lik "/home/docs".
	ProviderPath string `protobuf:"bytes,3,opt,name=provider_path,json=providerPath,proto3" json:"provider_path,omitempty"`
	// REQUIRED.
	// The address where the storage provider can be reached.
	// For example, tcp://localhost:1099.
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	// OPTIONAL.
	// Information to describe the functionalities
	// offered by the storage provider. Meant to be read
	// by humans.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// REQUIRED.
	// List of available methods.
	Features             *ProviderInfo_Features `protobuf:"bytes,6,opt,name=features,proto3" json:"features,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ProviderInfo) Reset()         { *m = ProviderInfo{} }
func (m *ProviderInfo) String() string { return proto.CompactTextString(m) }
func (*ProviderInfo) ProtoMessage()    {}
func (*ProviderInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e90c6b3f0c92b987, []int{0}
}

func (m *ProviderInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProviderInfo.Unmarshal(m, b)
}
func (m *ProviderInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProviderInfo.Marshal(b, m, deterministic)
}
func (m *ProviderInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProviderInfo.Merge(m, src)
}
func (m *ProviderInfo) XXX_Size() int {
	return xxx_messageInfo_ProviderInfo.Size(m)
}
func (m *ProviderInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProviderInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProviderInfo proto.InternalMessageInfo

func (m *ProviderInfo) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *ProviderInfo) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

func (m *ProviderInfo) GetProviderPath() string {
	if m != nil {
		return m.ProviderPath
	}
	return ""
}

func (m *ProviderInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ProviderInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ProviderInfo) GetFeatures() *ProviderInfo_Features {
	if m != nil {
		return m.Features
	}
	return nil
}

// REQUIRED.
// Represents the list of features available
// on this storage provider. If the feature is not supported,
// the related service methods MUST return CODE_UNIMPLEMENTED.
type ProviderInfo_Features struct {
	Recycle              bool     `protobuf:"varint,1,opt,name=recycle,proto3" json:"recycle,omitempty"`
	FileVersions         bool     `protobuf:"varint,2,opt,name=file_versions,json=fileVersions,proto3" json:"file_versions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProviderInfo_Features) Reset()         { *m = ProviderInfo_Features{} }
func (m *ProviderInfo_Features) String() string { return proto.CompactTextString(m) }
func (*ProviderInfo_Features) ProtoMessage()    {}
func (*ProviderInfo_Features) Descriptor() ([]byte, []int) {
	return fileDescriptor_e90c6b3f0c92b987, []int{0, 0}
}

func (m *ProviderInfo_Features) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProviderInfo_Features.Unmarshal(m, b)
}
func (m *ProviderInfo_Features) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProviderInfo_Features.Marshal(b, m, deterministic)
}
func (m *ProviderInfo_Features) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProviderInfo_Features.Merge(m, src)
}
func (m *ProviderInfo_Features) XXX_Size() int {
	return xxx_messageInfo_ProviderInfo_Features.Size(m)
}
func (m *ProviderInfo_Features) XXX_DiscardUnknown() {
	xxx_messageInfo_ProviderInfo_Features.DiscardUnknown(m)
}

var xxx_messageInfo_ProviderInfo_Features proto.InternalMessageInfo

func (m *ProviderInfo_Features) GetRecycle() bool {
	if m != nil {
		return m.Recycle
	}
	return false
}

func (m *ProviderInfo_Features) GetFileVersions() bool {
	if m != nil {
		return m.FileVersions
	}
	return false
}

func init() {
	proto.RegisterType((*ProviderInfo)(nil), "cs3.storagetypes.ProviderInfo")
	proto.RegisterType((*ProviderInfo_Features)(nil), "cs3.storagetypes.ProviderInfo.Features")
}

func init() {
	proto.RegisterFile("cs3/storagetypes/storagetypes.proto", fileDescriptor_e90c6b3f0c92b987)
}

var fileDescriptor_e90c6b3f0c92b987 = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xd1, 0x4e, 0xf2, 0x30,
	0x18, 0x86, 0xb3, 0xfd, 0xbf, 0x38, 0x0b, 0xa2, 0x36, 0x9a, 0x34, 0x9c, 0x48, 0xe4, 0x40, 0x3c,
	0xa9, 0x89, 0xbb, 0x02, 0x21, 0x18, 0x39, 0x62, 0xd9, 0x88, 0x51, 0x63, 0x42, 0x4a, 0x5b, 0xa4,
	0x09, 0xd2, 0xda, 0x16, 0x12, 0x6e, 0xc7, 0x43, 0x2f, 0x45, 0x6f, 0xca, 0xb4, 0xdb, 0x70, 0xea,
	0xd9, 0xbe, 0xe7, 0x7b, 0xde, 0xe5, 0x7b, 0x37, 0xd0, 0xa1, 0x26, 0xbe, 0x34, 0x56, 0x6a, 0xf2,
	0xcc, 0xed, 0x46, 0x71, 0xf3, 0x63, 0xc0, 0x4a, 0x4b, 0x2b, 0xe1, 0x21, 0x35, 0x31, 0xae, 0xf2,
	0xd6, 0x89, 0x8b, 0xe5, 0x7e, 0x45, 0x3c, 0xfb, 0x0c, 0x41, 0x23, 0xd1, 0x72, 0x2d, 0x18, 0xd7,
	0xc3, 0xe5, 0x4c, 0xc2, 0x0b, 0x50, 0x93, 0x8a, 0xbc, 0xae, 0x38, 0x0a, 0xda, 0x41, 0xb7, 0x7e,
	0x75, 0x84, 0xdd, 0xab, 0xf2, 0xc8, 0xc8, 0x2f, 0xd2, 0x42, 0x80, 0xa7, 0xa0, 0xae, 0x8a, 0xe8,
	0x44, 0x30, 0x14, 0xb6, 0x83, 0xee, 0x5e, 0x0a, 0x4a, 0x34, 0x64, 0xb0, 0x03, 0xf6, 0xb7, 0x82,
	0x22, 0x76, 0x8e, 0xfe, 0x79, 0xa5, 0x51, 0xc2, 0x84, 0xd8, 0x39, 0x44, 0x60, 0x97, 0x30, 0xa6,
	0xb9, 0x31, 0xe8, 0xbf, 0x5f, 0x97, 0x23, 0x6c, 0x83, 0x3a, 0xe3, 0x86, 0x6a, 0xa1, 0xac, 0x90,
	0x4b, 0xb4, 0xe3, 0xb7, 0x55, 0x04, 0xfb, 0x20, 0x9a, 0x71, 0x62, 0x57, 0x9a, 0x1b, 0x54, 0xf3,
	0xe7, 0x9e, 0xe3, 0xdf, 0xcd, 0x71, 0xb5, 0x1e, 0xbe, 0x29, 0xf4, 0x74, 0x1b, 0x6c, 0x0d, 0x41,
	0x54, 0x52, 0x77, 0x8c, 0xe6, 0x74, 0x43, 0x17, 0x79, 0xfd, 0x28, 0x2d, 0x47, 0xd7, 0x65, 0x26,
	0x16, 0x7c, 0xb2, 0xe6, 0xda, 0x08, 0xb9, 0x34, 0xbe, 0x6e, 0x94, 0x36, 0x1c, 0xbc, 0x2b, 0x58,
	0x6f, 0x01, 0x8e, 0xa9, 0x7c, 0xf9, 0x73, 0x42, 0xef, 0x20, 0x9b, 0x13, 0x9d, 0x3f, 0x27, 0xee,
	0xb3, 0x27, 0xc1, 0x63, 0xb3, 0x2a, 0xa8, 0xe9, 0x5b, 0xd8, 0xec, 0xf7, 0x46, 0xf7, 0xd9, 0xed,
	0x75, 0x3a, 0x18, 0x3f, 0x24, 0x83, 0xec, 0x3d, 0x6c, 0xf6, 0xb3, 0x18, 0xfb, 0xe0, 0xd8, 0x39,
	0x1f, 0x1e, 0x3c, 0x7d, 0x83, 0x69, 0xcd, 0xff, 0xc2, 0xf8, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x14,
	0xa6, 0x0b, 0xef, 0x12, 0x02, 0x00, 0x00,
}
